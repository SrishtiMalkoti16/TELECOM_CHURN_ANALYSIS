# -*- coding: utf-8 -*-
"""Sample ML Submission Template.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10B2s5af8INkHgIz_7XBjW3iNDbGY7ltx

# **Project Name**    - Telecom Churn Analysis

##### **Project Type**    - EDA
##### **Member  -Srishti Malkoti**

# **Project Summary -**

CUSTOMER CHURN - a common challenge faced by telecom industry , is analyzed in this project.I have aimed to decode the churn rate and uncover the pivotal factors behind why customers leave their telecom services within a specific timeframe.

# **GitHub Link -**

https://github.com/SrishtiMalkoti16

# **Problem Statement**

**Orange S.A., formerly France Télécom S.A., is a French multinational telecommunications corporation. The Orange Telecom's Churn Dataset, consists of cleaned customer activity data (features), along with a churn label specifying whether a customer cancelled the subscription. Explore and analyze the data to discover key factors responsible for customer churn and come up with ways/recommendations to ensure customer retention.**

# **General Guidelines** : -

1.   Well-structured, formatted, and commented code is required.
2.   Exception Handling, Production Grade Code & Deployment Ready Code will be a plus. Those students will be awarded some additional credits.
     
     The additional credits will have advantages over other students during Star Student selection.
       
             [ Note: - Deployment Ready Code is defined as, the whole .ipynb notebook should be executable in one go
                       without a single error logged. ]

3.   Each and every logic should have proper comments.
4. You may add as many number of charts you want. Make Sure for each and every chart the following format should be answered.
        

```
# Chart visualization code
```
            

*   Why did you pick the specific chart?
*   What is/are the insight(s) found from the chart?
* Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

5. You have to create at least 15 logical & meaningful charts having important insights.

# ***Let's Begin !***

## ***1. Know Your Data***

### Import Libraries
"""

# Commented out IPython magic to ensure Python compatibility.
# Import Libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sb
import ast

"""### Dataset Loading"""

# Load Dataset
# Mount drive
from google.colab import drive
drive.mount('/content/drive')

from google.colab import drive
drive.mount('/content/drive')

# Load dataset
path ='/content/drive/MyDrive/Colab Notebooks/Telecom Churn.csv'
telecom_df =pd.read_csv(path)
telecom_df

"""### Dataset First View"""

# Dataset First Look
telecom_df.head()

"""### Dataset Rows & Columns count"""

# Dataset Rows & Columns count
telecom_df.shape

"""### Dataset Information"""

# Dataset Info
telecom_df.info()

"""#### Duplicate Values"""

# Dataset Duplicate Value Count
telecom_df.duplicated().sum()

"""#### Missing Values/Null Values"""

# Missing Values/Null Values Count
telecom_df.isnull().sum()

# Visualizing the missing values
sb.heatmap(telecom_df.isnull())

"""### What did you know about your dataset?

The given dataset is from telecom industry consisting of 3333 rows and 20 columns of customer activity data as Area code, plan details, call details along with churn labels specifying whether the customer cancelled the subscription. No missing and duplicate values in the dataset.

## ***2. Understanding Your Variables***
"""

# Dataset Columns
telecom_df.columns

# Dataset Describe
telecom_df.describe()

"""### Variables Description

State :All 51 states

Account Length : How long account has been active

Area Code : Code Number of Area

lntl Plan : International plan activated ( yes, no )

VMail Plan : Voice Mail plan activated ( yes ,no )

VMail Message : No.of voice mail messages

Day Mins : Total day minutes used

Day calls : Total day calls made

Day Charge : Total day charge

Eve Mins : Total evening minutes

Eve Calls : Total evening calls

Eve Charge : Total evening charge

Night Mins : Total night minutes

Night Calls : Total night calls

Night Charge : Total night charge

Intl Mins : Total International minutes used

Intl Calls : Total International calls made

Intl Charge : Total International charge

CustServ calls : Number of customer service calls made

Churn : Customer churn (Target Variable True=1, False=0)

### Check Unique Values for each variable.
"""

# Check Unique Values for each variable.
for i in telecom_df.columns:
  print("No. of unique values in ",i,"is", telecom_df[i].nunique())

"""## 3. ***Data Wrangling***

### Data Wrangling Code
"""

# Write your code to make your dataset analysis ready.
print("No. of customers Churning :",telecom_df[telecom_df['Churn']==True].Churn.count()) # Total No of Customers Churning

# Variable Assigning to churned data
churn_df = telecom_df[telecom_df['Churn']==True]

# Total No of Unique Area Code
print("No of Unique Area Code :", telecom_df['Area code'].nunique())

# Customers On which Internaltion plan is activated
print("No of customer with international plan activated :", telecom_df[telecom_df['International plan']=='Yes']['International plan'].count())

# Customers On which Voice mail plan is activated
print("No of customer with Voice mail plan activated :", telecom_df[telecom_df['Voice mail plan']=='Yes']['Voice mail plan'].count())

churn_df

# % of total customers churning
print("Total no. of customers :", telecom_df.Churn.count())
perc_churn = (churn_df.Churn.count()/telecom_df.Churn.count())*100
print(f"Percentage of customer churning : {round(perc_churn,2)}%")

#Statewise customer churning
state_cust_churn = churn_df.groupby(['State'])['Churn'].value_counts().reset_index(name='Churn_customer')
print(state_cust_churn.sum())
state_cust_churn

# Account length wise churn data
acc_len_churn = churn_df.groupby(['Account length'])['Churn'].value_counts().reset_index(name='values')
print(acc_len_churn.sum())
acc_len_churn

# Area code wise Churn Count
Area_code_churn_count = churn_df.groupby(['Area code'])['Churn'].value_counts().reset_index(name='Counts')
Area_code_churn_count

# Area Code wise churn Percentage
Area_code_churn_perc = (telecom_df.groupby(['Area code'])['Churn'].mean()*100).reset_index()
Area_code_churn_perc

#Poor Connectivity by intersection of state by area code
Area_state_churn = churn_df.groupby(['Area code'])['State'].unique().reset_index(name='Unique state')
Area_state_churn

# Assigning the list of state of each area
Area_408_state_churn = Area_state_churn.loc[0,'Unique state']
Area_415_state_churn = Area_state_churn.loc[1,'Unique state']
Area_510_state_churn = Area_state_churn.loc[2,'Unique state']

inter_1= set(Area_408_state_churn).intersection(set(Area_415_state_churn))
poor_connectivity_states = set(inter_1).intersection(set(Area_510_state_churn))

print(f"Intersection by different areas code of churning gives {len(poor_connectivity_states)} poor connectivity states")
print("Try to short down the list of state by different dataset to generate more precise poor connectivity states")

# Percentage of Customers with and without international Plan churning to other networks
intl_plan_churn = (telecom_df.groupby(['International plan'])['Churn'].mean()*100).reset_index(name='Churn %')
print(intl_plan_churn)

# Total number of Customers churning with international plan
churn_intl_yes = churn_df[churn_df['International plan']=='Yes']
print(f"No of Customers churning having International plan is {churn_intl_yes['International plan'].value_counts()[0]}")

# Total number of Customers churning without international plan
churn_intl_no = churn_df[churn_df['International plan']=='No']
print(f"No of Customers churning without having International plan is {churn_intl_no['International plan'].value_counts()[0]}")

# Percentage of People with and without Voice mail Plan churning to other networks
vmail_plan_churn = (telecom_df.groupby(['Voice mail plan'])['Churn'].mean()*100).reset_index(name='Churn %')
print(vmail_plan_churn)

# Total number of people churning with vmail plan
churn_vmail_yes = churn_df[churn_df['Voice mail plan']=='Yes']
print(f"No of Customers churning having vmail plan is {churn_vmail_yes['Voice mail plan'].value_counts()[0]}")

# Total number of people churning without vmail plan
churn_vmail_no = churn_df[churn_df['Voice mail plan']=='No']
print(f"No of Customers churning not having vmail plan is {churn_vmail_no['Voice mail plan'].value_counts()[0]}")

# Customers churning having intl plan and vmail plan
intl_vmail_yes = churn_df[(churn_df['International plan'] == 'Yes') & (churn_df['Voice mail plan'] == 'Yes')]
if len(intl_vmail_yes) > 0:
    print(f"No of Customers churning having international and voice mail plan are {intl_vmail_yes['Churn'].value_counts().get(1, 0)}")
else:
    print("No customers churning with bothinternational and voice mail plan.")

# Customers churning having no intl plan and no vmail plan
intl_vmail_no = churn_df[(churn_df['International plan'] == 'No') & (churn_df['Voice mail plan'] == 'No')]
if len(intl_vmail_no) > 0:
    print(f"No of Customers churning having no international and no voice mail are {intl_vmail_no['Churn'].value_counts().get(1, 0)}")
else:
    print("No customers churning with neither international nor voice mail plan.")

# Customers churning having intl plan but no vmail plan
intl_yes_vmail_no = churn_df[(churn_df['International plan'] == 'Yes') & (churn_df['Voice mail plan'] == 'No')]
if len(intl_yes_vmail_no) > 0:
    print(f"No of Customers churning having international plan but not voice mail plan are {intl_yes_vmail_no['Churn'].value_counts().get(1, 0)}")
else:
    print("No customers churning with international plan but no voice mail plan.")

# Customers churning having no intl plan but vmail plan
intl_no_vmail_yes = churn_df[(churn_df['International plan'] == 'No') & (churn_df['Voice mail plan'] == 'Yes')]
if len(intl_no_vmail_yes) > 0:
    print(f"No of Customers churning having no international plan but voice mail plan are {intl_no_vmail_yes['Churn'].value_counts().get(1, 0)}")
else:
    print("No customers churning with no international plan but voice mail plan.")

# Poor Connectivity States
# States Sorted with respect to international and voice mail plan
state_intl_vmail_yes=intl_vmail_yes['State'].unique()
state_intl_vmail_no =intl_vmail_no['State'].unique()
state_intl_yes_vmail_no= intl_yes_vmail_no['State'].unique()
state_intl_no_vmail_yes= intl_no_vmail_yes['State'].unique()

# Intersection of 4 types of plan made
inter_1 = set(state_intl_vmail_yes).intersection(set(state_intl_vmail_no))
inter_2 = set(state_intl_yes_vmail_no).intersection(set(state_intl_no_vmail_yes))
Intersection =set(inter_1).intersection(set(inter_2))
print(f"List of poor connectivity states are : {list(Intersection)}")

# Percentage of People with number of Voice mail messages churning/not-churning to other networks
vmail_mssg_churn = telecom_df.groupby(['Churn'])['Number vmail messages'].mean().reset_index(name='perc_vmail_mssg')
vmail_mssg_churn

# Day Data
# Percentage of people churning with the average day mins,calls and charge.
telecom_df.groupby(['Churn'])['Total day minutes'].mean().reset_index(name='perc_day_mins')

# Percentage of people churning with the average day calls

telecom_df.groupby(['Churn'])['Total day calls'].mean().reset_index(name='perc_day_calls')

# Percentage of people churning with the average day charge.

telecom_df.groupby(['Churn'])['Total day charge'].mean().reset_index(name='perc_day_charge')

# Evening Data
# Percentage of people churning with the average Evening mins,calls and charge.
telecom_df.groupby(['Churn'])['Total eve minutes'].mean().reset_index(name='perc_eve_mins')

# Percentage of people churning with the average Evening calls
telecom_df.groupby(['Churn'])['Total eve calls'].mean().reset_index(name='perc_eve_calls')

# Percentage of people churning with the average Evening charge
telecom_df.groupby(['Churn'])['Total eve charge'].mean().reset_index(name='perc_eve_charge')

# Night Data
# Percentage of people churning with the average Night mins
telecom_df.groupby(['Churn'])['Total night minutes'].mean().reset_index(name='perc_night_mins')

# Percentage of people churning with the average Night calls
telecom_df.groupby(['Churn'])['Total night calls'].mean().reset_index(name='perc_night_calls')

# Percentage of people churning with the average Night charge
telecom_df.groupby(['Churn'])['Total night charge'].mean().reset_index(name='perc_night_charge')

# International Call Data
# Percentage of people churning with the average international mins
telecom_df.groupby(['Churn'])['Total intl minutes'].mean().reset_index(name='perc_intl_mins')

# Percentage of people churning with the average international calls
telecom_df.groupby(['Churn'])['Total intl calls'].mean().reset_index(name='perc_intl_calls')

# Percentage of people churning with the average international charge
telecom_df.groupby(['Churn'])['Total intl charge'].mean().reset_index(name='perc_intl_charge')

# Combining of day,evening and night calls, mins and charges
telecom_df['Total calls'] = telecom_df.loc[:,['Total day calls','Total eve calls', 'Total night calls']].sum(axis=1)
telecom_df['Total mins'] = telecom_df.loc[:,['Total day minutes','Total eve minutes', 'Total night minutes']].sum(axis=1)
telecom_df['Total charge'] = telecom_df.loc[:,['Total day charge','Total eve charge', 'Total night charge']].sum(axis=1)

# mins per call
telecom_df['min_per_call'] = telecom_df['Total mins']/telecom_df['Total calls']

#charge per min
telecom_df['charge_per_min'] = telecom_df['Total charge']/telecom_df['Total mins']

# International mins per call
telecom_df['Intl_min_per_call'] = telecom_df['Total intl minutes']/telecom_df['Total intl calls']

#International charge per min
telecom_df['Intl_charge_per_min'] = telecom_df['Total intl charge']/telecom_df['Total intl minutes']



# Customer Service Call data
print("No of unique service calls made :", telecom_df['Customer service calls'].nunique())

# Percentage of churning based on the customer service calls made
(telecom_df.groupby(['Customer service calls'])['Churn'].mean()*100).reset_index(name='Perc_churned')

"""### What all manipulations have you done and insights you found?

After data wrangling on the telecom dataset, key insights include identifying a correlation between customer churn and specific features, such as Area code , International plan , International & voice mail plan and customer service calls.

First I found the total churn customer ~ 14.5%
On the basis of Area code , we discovered that churn rate from Area 415 is more as compared to others. However , the distribution of churn is nearly same in all areas which suggests that churn rates may not be significantly influenced by the area code alone. This implies that factors other than geographic location, such as service quality, pricing plans, or customer satisfaction, may play a more substantial role in influencing churn.
Customers with an international plan exhibit a higher churn rate of approximately 42.41% suggests that having an international plan may contribute to a higher likelihood of churn. This could be due to various factors, such as dissatisfaction with international calling rates, competing offers from other providers, or changes in communication needs.

Customers without both an international plan and a voicemail plan have a high churn rate of approximately 62% suggests that this particular segment may be more prone to leaving the telecom service. This could indicate that these customers may not find the current service offerings or features aligned with their communication needs, leading to dissatisfaction and a higher likelihood of churn

## ***4. Data Vizualization, Storytelling & Experimenting with charts : Understand the relationships between variables***

#### Chart - 1
"""

# Chart - 1 visualization code
import matplotlib.pyplot as plt

# Assuming telecom_df['Churn'] contains boolean values (True/False)
print(telecom_df.Churn.value_counts())
print(" ")

churn_counts = telecom_df['Churn'].value_counts()
plt.pie(churn_counts, labels=['Not Churn (%)', 'Churn (%)'],startangle=40,shadow=True,autopct="%1.1f%%",
colors=['green','red'],explode=[0.12,0])
plt.title('Churn Distribution')
plt.show()

"""##### 1. Why did you pick the specific chart?

**Pie charts are utilized to illustrate the proportion of different categories within a dataset. They are effective for highlighting dominant categories, showing percentages or proportions, and providing a quick, visually simple overview of part-to-whole relationships.**

##### 2. What is/are the insight(s) found from the chart?

**The pie chart reveals a 14.4% churn rate, with 483 customers leaving and 85.5% (2850 customers) staying. While the majority exhibits strong customer retention, understanding and addressing the reasons behind the churn can guide strategies for improving overall customer satisfaction and loyalty. Periodic monitoring and targeted retention efforts could optimize the balance between customer acquisition and retention.**

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

**Yes, the gained insights can help create a positive business impact by guiding targeted efforts to improve customer retention, enhance satisfaction, and address factors contributing to churn. Identifying and addressing customer needs can lead to increased loyalty and long-term business success.**

#### Chart - 2
"""

# Chart - 2 visualization code
for col in telecom_df.describe().columns:
    fig,axes = plt.subplots(nrows=1,ncols=2,figsize=(18,6))
    sns.histplot(telecom_df[col], ax = axes[0],kde = True)
    sns.boxplot(telecom_df[col], ax = axes[1],orient='h',showmeans=True,color='pink')
    fig.suptitle("Distribution plot of "+ col, fontsize = 15)
    plt.show()

"""##### 1. Why did you pick the specific chart?

I chose a histogram to visualize the data because it effectively displays the distribution and frequency of a numerical variable, providing insights into the underlying patterns. Histograms are particularly useful for understanding the spread, shape, and central tendencies of data, making them suitable for exploring telecom dataset characteristics such as call durations, customer account lengths, or other numerical features.

Box plot provides a concise summary of the distribution's central tendency, spread, and potential outliers. The graphical representation facilitates a quick assessment of data dispersion and helps uncover patterns and anomalies in a clear and concise manner.

##### 2. What is/are the insight(s) found from the chart?

We see symmetric distribution and close alignment of mean and median for numerical columns in the dataset. This indicate a relatively balanced spread of data. This suggests that there are no significant outliers or extreme values pulling the distribution in one direction, and the majority of data points cluster around the central tendency.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

The insights allows the telecom provider to address multiple factors contributing to churn, fostering customer satisfaction, and ultimately leading to improved business performance and positive customer experiences.

Achieving a holistic comprehension of churn requires the telecom provider to investigate the interplay of various contributing factors, allowing the formulation of effective and nuanced retention strategies.

#### Chart - 3
"""

# Chart - 3  State vs. average true churn percentage visualization code
# Vizualizing top 10 churned state
import matplotlib.pyplot as plt
import seaborn as sns

# Calculate average true churn percentage for each state and select top 10
avg_churn_percentage = (telecom_df.groupby('State')['Churn'].mean()* 100).sort_values(ascending=False).reset_index(name='Avg_Churn_Percentage').head(10)

# Plotting
plt.figure(figsize=(15, 6))
sns.barplot(x='State', y='Avg_Churn_Percentage', data=avg_churn_percentage, palette='viridis')

# Adding percentage labels above each bar
for index, value in enumerate(avg_churn_percentage['Avg_Churn_Percentage']):
    plt.text(index, value + 0.1, f'{value:.2%}', ha='center', va='bottom', fontsize=10)

plt.title('Top 10 States - Average True Churn Percentage')
plt.xlabel('State')
plt.ylabel('Average True Churn Percentage')
plt.xticks(rotation=360, ha='right')
plt.ylim(0,30)
plt.show()

# Vizualizing bottom 10 churned state
import matplotlib.pyplot as plt
import seaborn as sns
plt.figure(figsize=(10,5))
bar1 = ((telecom_df.groupby(['State'])['Churn'].mean()*100).sort_values(ascending = True).reset_index(name="Average True Churn ").head(10))
plots = sns.barplot(data = bar1, x = 'State', y="Average True Churn ")
for bar in plots.patches:
  plots.annotate(format(bar.get_height(),'.2f'),
                   (bar.get_x() + bar.get_width() / 2,
                    bar.get_height()), ha='center', va='center',
                   size=12, xytext=(0, 8),
                   textcoords='offset points')
plt.title(" State with least churn percentage", fontsize = 20)
plt.xlabel('State', fontsize = 15)
plt.ylabel('Percentage (%)', fontsize = 15)
# Setting limit of y axis from 0 to 10
plt.ylim(0,10)
plt.show()

"""##### 1. Why did you pick the specific chart?

Bar graphs are ideal for showcasing the variations in churn rates across different states, making it easy to interpret and compare the magnitudes of percentages. Additionally, the vertical bars provide a clear visual representation, allowing  to quickly identify and understand the states with the highest churn rates.

##### 2. What is/are the insight(s) found from the chart?

The graph highlights significant variations in churn rates among different states, with some states exhibiting notably higher average true churn percentages than others.

1. CA, NJ ,TX , MD ,SC ,MI, MS, NV, WA, ME are the ones who have higher churn rate
more than 20% which is more than 50% of average churn rate.

2. HI, AK, AZ, VA, IA, LA, NE, IL, WI, RI are the ones who have lower churn rate which is less than 10%.

Specific states with the highest bars indicate priority areas for targeted retention efforts.Understanding variations in churn rates helps uncover potential regional factors influencing customer satisfaction and loyalty

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

**The gained insights from the bar graph can indeed help create a positive business impact by enabling targeted retention strategies and resource optimization in high-churn states.
However, if not acted upon, these insights could potentially lead to negative growth. Neglecting to address the identified regional disparities in churn rates may result in customer dissatisfaction and attrition, negatively impacting customer loyalty and overall business performance. Without intervention, the unmanaged churn in key states could lead to revenue loss, decreased market share, and potential damage to the company's reputation. Therefore, proactive measures and tailored strategies are essential to leverage these insights for positive growth and sustained customer relationships.**

#### Chart - 4
"""

# Chart - 4  One Digit Account Length
one_length = telecom_df[telecom_df['Account length']<=9].loc[:,['Churn']].value_counts()
print(one_length)
print(" ")

# Visualizing One Digit Account Length Based on Churn percentage
#color palette selection
colors = sns.color_palette('pastel')[0:7]
textprops = {'fontsize':13}

plt.figure(figsize=(15,7))
# plotting pie chart
plt.pie(one_length, labels=['Not Churn(%)','Churn(%)'], startangle=90, colors=colors, autopct="%1.1f%%",textprops = textprops)
plt.title('One Digit Account Length churn rate', fontsize=18)
plt.show()

# Two Digit Account Length
two_account=telecom_df[(telecom_df['Account length']<=99) & (telecom_df['Account length']>=10)].loc[:,['Churn']].value_counts()
print(two_account)
print(" ")

# Visualizing Two Digit Account Length Based on Churn percentage
#color palette selection
colors = sns.color_palette('pastel')[0:7]
textprops = {'fontsize':13}

plt.figure(figsize=(15,7))
# plotting pie chart
plt.pie(two_account, labels=['Not Churn(%)','Churn(%)'], startangle=90, colors=colors, autopct="%1.1f%%", textprops = textprops)
plt.title('Two Digit Account Length churn rate', fontsize=18)
plt.show()

# Three Digit Account Length
three_account=telecom_df[(telecom_df['Account length']<=telecom_df['Account length'].max()) & (telecom_df['Account length']>=100)].loc[:,['Churn']].value_counts()
print(three_account)
print(" ")

# Visualizing Three Digit Account Length Based on Churn percentage
#color palette selection
colors = sns.color_palette('pastel')[0:7]
textprops = {'fontsize':13}

plt.figure(figsize=(15,7))
# plotting data on chart using seaborn
plt.pie(three_account, labels=['Not Churn(%)','Churn(%)'],startangle=90 , colors=colors, autopct="%1.1f%%",textprops = textprops)
plt.title('Three Digit Account Length churn rate', fontsize=18)
plt.show()

"""##### 1. Why did you pick the specific chart?

Pie charts are generally used to show the proportions of a whole, and are especially useful for displaying data that has already been calculated as a percentage of the whole.

So, I used Pie chart and which helped me to get the percentage comparision of the churn percentage account length wise.

##### 2. What is/are the insight(s) found from the chart?

Churning rate is higher in two and three digit acccount lengths i.e 14 % and 15 % respectively.
1. Higher churn rates may indicate that customers with longer-standing relationships are more prone to churning. This could be due to dissatisfaction, changing needs, or increased competition attracting long-term customers away.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Identifying potential issues causing dissatisfaction among longer-term customers allows the implementation of targeted retention measures, improving customer satisfaction and loyalty.
However, if left unaddressed, these insights may contribute to negative growth, leading to revenue loss and decreased market share. Neglecting the specific needs and concerns of long-term customers may result in a decline in customer trust and loyalty, negatively impacting the overall health of the business. Proactive interventions are crucial to leverage these insights positively and foster long-term customer relationships.

#### Chart - 5
"""

# Chart - 5 visualization code
# data for international plan
inter_plan = telecom_df['International plan'].value_counts()
print(inter_plan)
print(" ")

# Visualizing Percentage of customers taken international plan
#color palette selection
colors = sns.color_palette('husl')[0:7]
textprops = {'fontsize':13}

plt.figure(figsize=(15,7))
# plotting pie chart
plt.pie(inter_plan, labels=['No','Yes'],startangle=90 , colors=colors, autopct="%1.1f%%", textprops = textprops)
plt.title('International Plan', fontsize=18)
plt.show()

# Assigning values for furthur charts
i1 = telecom_df['International plan'].unique()
i2 = telecom_df.groupby('International plan')['Churn'].mean()*100
i3 = telecom_df.groupby(['International plan'])['Total intl charge'].mean()
i4 = telecom_df.groupby(["Churn"])['Total intl minutes'].mean()

# Visualizing code for people churning percentage having international plan
plt.figure(figsize=(6,7))
plots = sns.barplot(x=i1,y=i2)
for bar in plots.patches:
  plots.annotate(format(bar.get_height(),'.2f'),
                   (bar.get_x() + bar.get_width() / 2,
                    bar.get_height()), ha='center', va='center',
                   size=12, xytext=(0, 8),
                   textcoords='offset points')

plt.title(" Percentage of customer churn on basis of International plan", fontsize = 20)
plt.xlabel('International plan', fontsize = 15)
plt.ylabel('Percentage (%)', fontsize = 15)
plt.ylim(0,45)
plt.show()

"""##### 1. Why did you pick the specific chart?

Pie charts are generally used to show the proportions of a whole, and are especially useful for displaying data that has already been calculated as a percentage of the whole. Thus, I used to show the percentage of people taken international plan through pie chart with different colored area under a circle.

Bar charts are used to compare the size or frequency of different categories or groups of data. Bar charts are useful for comparing data across different categories, and they can be used to display a large amount of data in a small space. Thus, I used bar chart to show the percentage of customers churned having international plan and the average calling charge as well as conversation average minutes of customers those have international plan.
Answer Here.

##### 2. What is/are the insight(s) found from the chart?

The analysis reveals that customers without an international plan have a significantly lower churn rate (11.4%) compared to those with an international plan (42.4%).

The comparable charges for international calls (2.87 - international , 2.75 -non international plans)and the marginal difference in call durations suggest that customers with international plans may not perceive added benefits, potentially contributing to their dissatisfaction and higher churn rates.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, the insights indicating dissatisfaction among customers with international plans and higher churn rates offer a valuable opportunity for positive business impact. By revisiting the pricing and benefits structure of international plans, the telecom provider can tailor offerings to enhance customer satisfaction and loyalty. Implementing strategic changes based on these insights has the potential to reduce churn, improve customer retention, and positively impact the overall profitability and reputation of the telecom business.

#### Chart - 6
"""

# Chart - 6 visualization code
# data for voice mail plan
voice = telecom_df['Voice mail plan'].value_counts()

# vizualizing code for customers percentage having voice mail plan

#color palette selection
palette_color = sns.color_palette('pastel')
textprops = {'fontsize':13}

# plotting chart of voice mail
plt.figure(figsize=(9,7))
plt.pie(voice, labels=['No','Yes'],startangle=90 , colors=palette_color, autopct="%1.1f%%",textprops = textprops)
plt.title('Distribution of customers having voice mail plan', fontsize=18)
plt.show()

# Vizualizing code for customers churning while having voice mail plan

cc1=list(['no','yes'])
cc2=telecom_df.groupby('Voice mail plan')['Churn'].mean()*100

plt.figure(figsize=(6,8))
plots = sns.barplot(x=cc1,y=cc2)
for bar in plots.patches:
  plots.annotate(format(bar.get_height(),'.2f'),
                   (bar.get_x() + bar.get_width() / 2,
                    bar.get_height()), ha='center', va='center',
                   size=12, xytext=(0, 8),
                   textcoords='offset points')

plt.title(" Percentage of customer churn on basis of voice mail plan", fontsize = 20)
plt.xlabel('Voice mail plan', fontsize = 15)
plt.ylabel('Percentage (%)', fontsize = 15)

"""##### 1. Why did you pick the specific chart?

Pie charts are generally used to show the proportions of a whole, and are especially useful for displaying data that has already been calculated as a percentage of the whole. Thus, I have used pie chart to show the percentage of customers having voice mail plan.

Bar charts are used to compare the size or frequency of different categories or groups of data. Bar charts are useful for comparing data across different categories, and they can be used to display a large amount of data in a small space. Thus, I have used bar chart to show the percentage of customers churned having voice mail plan.

##### 2. What is/are the insight(s) found from the chart?

The analysis reveals that customers with a voice mail plan exhibit a significantly lower churn rate (8.7%) compared to those without a voice mail plan (16.7%). This suggests that the availability of a voice mail plan might contribute positively to customer retention. The telecom provider can leverage this insight to emphasize the benefits of voice mail plans in their offerings and potentially design targeted strategies to encourage adoption, ultimately enhancing overall customer satisfaction and loyalty.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, the insights indicating a lower churn rate among customers with a voice mail plan present an opportunity for positive business impact. Recognizing the positive association between having a voice mail plan and reduced churn suggests that promoting or incentivizing the adoption of voice mail plans may contribute to increased customer loyality

#### Chart - 7
"""

# Chart - 7 visualization code
# Visualizing code for Area Code wise average churn percentage
a1= telecom_df['Area code'].unique()
b1= telecom_df.groupby('Area code')['Churn'].mean()*100

plt.figure(figsize=(6,5))
plots = sns.barplot(x=a1, y=b1)
for bar in plots.patches:
  plots.annotate(format(bar.get_height(),'.2f'),
                   (bar.get_x() + bar.get_width() / 2,
                    bar.get_height()), ha='center', va='center',
                   size=12, xytext=(0, 8),
                   textcoords='offset points')
plt.title('Area Code vs Churn Percantage',fontsize=20)
plt.xlabel('Area code', fontsize = 15)
plt.ylabel('Churn percentage (%)', fontsize = 15)
plt.ylim(0,17)
plt.show()

"""##### 1. Why did you pick the specific chart?

Bar charts are used to compare the size or frequency of different categories or groups of data. Bar charts are useful for comparing data across different categories, and they can be used to display a large amount of data in a small space.

To show the average percentage of true churn with respect to Area Code, we have used Bar Chart

##### 2. What is/are the insight(s) found from the chart?

The fact that the distribution of churn % appears to be similar across different area codes despite a higher number of customers from area code 415 suggests that churn rates may not be significantly influenced by the area code alone. This implies that factors other than geographic location, such as service quality, pricing plans, or customer satisfaction, may play a more substantial role in influencing churn.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

We may not find actionable patterns or targeted strategies at the area code level.
To address potential issues, a more granular approach, such as analyzing states within each area code, becomes necessary. Therefore, while the isolated area code analysis might not directly impact business decisions, further segmentation at the state level provides a more nuanced understanding for effective interventions

#### Chart - 8
"""

# Chart - 8 visualization code
# Average of total day calls, total day minutes & total day charge of churn
cn_dcalls = pd.DataFrame(telecom_df.groupby(["Churn"])['Total day calls'].mean())
print(cn_dcalls)
print('')
cn_dm = pd.DataFrame(telecom_df.groupby(["Churn"])['Total day minutes'].mean())
print(cn_dm)
print('')
cn_dc = pd.DataFrame(telecom_df.groupby(["Churn"])['Total day charge'].mean())
print(cn_dc)

# Vizualizing Total day minutes vs total day charge
plt.figure(figsize=(7,8))
sns.scatterplot(data=telecom_df, x="Total day minutes", y="Total day charge", hue="Churn")
plt.title('Total Day Minutes, vs Total Day Charge', fontsize=18)
plt.xlabel('Total day minutes',fontsize = 13)
plt.ylabel('Total day charges',fontsize = 13)
plt.show()

# Average of total eve calls, total eve minutes & total evening charge of churn
cn_ecalls = pd.DataFrame(telecom_df.groupby(["Churn"])['Total eve calls'].mean())
print(cn_ecalls)
print(" ")
cn_em = pd.DataFrame(telecom_df.groupby(["Churn"])['Total eve minutes'].mean())
print(cn_em)
print(" ")
cn_ec = pd.DataFrame(telecom_df.groupby(["Churn"])['Total eve charge'].mean())
print(cn_ec)

# Vizualizing total evening minutes vs total evening charge
plt.figure(figsize=(7,8))
sns.scatterplot(x="Total eve minutes", y="Total eve charge", hue="Churn", data=telecom_df)
plt.title('Total evening minutes vs Total evening charge', fontsize=18)
plt.xlabel('Total eve minutes',fontsize = 13)
plt.ylabel('Total eve charges',fontsize = 13)
plt.show()

# Average of total night calls, total night minutes & total night charge of churn
cn_ncalls = pd.DataFrame(telecom_df.groupby(["Churn"])['Total night calls'].mean())
print(cn_ncalls)
print(" ")
cn_nm = pd.DataFrame(telecom_df.groupby(["Churn"])['Total night minutes'].mean())
print(cn_nm)
print(" ")
cn_nc = pd.DataFrame(telecom_df.groupby(["Churn"])['Total night charge'].mean())
print(cn_nc)

# Vizualizing Total night minutes vs total night charge
plt.figure(figsize=(7,8))
sns.scatterplot(x="Total night minutes", y="Total night charge", hue="Churn", data=telecom_df)
plt.title('Total night minutes vs Total night charge', fontsize=18)
plt.xlabel('Total night minutes',fontsize = 13)
plt.ylabel('Total night charges',fontsize = 13)
plt.show()

# Table of average calls of total day, eve & night on basis of churn
cn_calls = pd.merge(pd.merge(cn_dcalls,cn_ecalls, on = 'Churn'),cn_ncalls,on = 'Churn').round(2).T
cn_calls

# Bar plot of above table
plt.figure(figsize=(9,6))
cn_calls.plot(kind='bar',ylabel='mean')
plt.title('Average of calls on the basis of churn', fontsize=18)
plt.xlabel("calls", fontsize = 13)
plt.ylabel('Average of Calls',fontsize = 13)
plt.show()

# Table of average minutes of total day, eve & night on basis of churn
cn_minutes = pd.merge(pd.merge(cn_dm,cn_em, on = 'Churn'),cn_nm,on = 'Churn').round(2).T
cn_minutes

# Bar plot of above table
plt.figure(figsize=(9,6))
cn_minutes.plot(kind='bar',ylabel='mean')
plt.title('Average of minutes on the basis of churn', fontsize=18)
plt.xlabel("minutes", fontsize = 13)
plt.ylabel('Average of minutes',fontsize = 13)
plt.show()

# Table of average charges of total day, eve & night on basis of churn
cn_charges = pd.merge(pd.merge(cn_dc,cn_ec, on = 'Churn'),cn_nc,on = 'Churn').round(2).T
cn_charges

# Bar plot of above table
plt.figure(figsize=(9,7))
cn_charges.plot(kind='bar',ylabel='mean')
plt.title('Average of charges on the basis of churn', fontsize=18)
plt.xlabel("Charges", fontsize = 13)
plt.ylabel('Average of charges',fontsize = 13)
plt.show()

"""##### 1. Why did you pick the specific chart?

Scatter plots are used to plot the relationship between two numerical variables. Thus,I have used the scatter plot to depict the relationship between evening, day & night calls , minutes and charge.

Bar charts are useful for comparing data across different categories, and they can be used to display a large amount of data in a small space. Thus, I have used the bar plot to show the evening, night and day manipulated data to depict meaningful insights

##### 2. What is/are the insight(s) found from the chart?

The analysis suggests that churn customers speak more minutes and consequently pay more charges presents an opportunity for a retention strategy. Introducing a master plan that offers reduced charges, discounts, or additional free minutes for customers with higher talk times could be an effective approach

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, the insight suggesting that churn customers speak more minutes and pay higher charges provides an opportunity for a targeted master plan. This positive intervention aligns pricing with customer needs. However, if not implemented carefully, offering discounts may impact short-term revenue, but the potential long-term gain from improved customer retention outweighs the risks, leading to positive business impact.

#### Chart - 9
"""

# Chart - 9 visualization code
# data for customer service calls
service = pd.DataFrame(telecom_df.groupby('Customer service calls')['Churn'].mean()*100)

# Visualizing churn rate per customer service calls
plt.figure(figsize=(12,9))
plots = sns.barplot(x=service.index, y=service['Churn'])
for bar in plots.patches:
  plots.annotate(format(bar.get_height(),'.2f'),
                   (bar.get_x() + bar.get_width() / 2,
                    bar.get_height()), ha='center', va='center',
                   size=12, xytext=(0, 8),
                   textcoords='offset points')
plt.title("Churn rate per service call", fontsize = 20)
plt.xlabel('No of cust service call', fontsize = 15)
plt.ylabel('Percentage (%)', fontsize = 15)
plt.show()

"""##### 1. Why did you pick the specific chart?

Bar charts are useful for comparing data across different categories, and they can be used to display a large amount of data in a small space. Thus, I have used the bar plot to show the relationship between churn rate per customer service calls.

##### 2. What is/are the insight(s) found from the chart?

The analysis reveals a notable correlation between the number of customer service calls and the likelihood of churn. Customers making more than 5 service calls exhibit a higher churn rate. This suggests that addressing the concerns of customers with a high number of service calls promptly and providing superior service may be crucial in retaining them. Implementing proactive customer support measures for this segment could potentially reduce churn and enhance overall customer satisfaction.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, the insights suggesting a correlation between a high number of service calls and increased churn rates provide an opportunity for positive business impact. By prioritizing and improving customer service for those making more than 5 calls, the telecom provider can enhance customer satisfaction, potentially reducing churn and fostering loyalty. Neglecting to improve service quality for this segment may result in continued dissatisfaction, leading to further churn and negative impact on customer retention and overall business growth.

# **Strategic Recommendations for Achieving Business Objectives**
1. International Plan Adjustment: Enhance international plans to reduce churn,
addressing dissatisfaction observed among users.
2. Voicemail Plan Upgrades:Improve voicemail plans to attract and retain customers, focusing on the lower churn rate in this segment.
3. Customer Service Excellence:Prioritize efficient customer service, particularly for users making more than 5 service calls.

4. Fair Pricing Structure: Review and adjust pricing to ensure fairness, especially for international plan users facing similar charges as non-international plan users.

5. Incentives for High Talk Time: Introduce a master plan with perks for high talk time users, aiming to enhance satisfaction and retention.

# **Conclusion**

"In the saturated telecommunications market, where customer acquisition is slow, the focus shifts to retention and reducing churn. This project delved into a churn dataset, revealing key insights:

1. Direct correlation between charge and minute fields.
2. Irrelevance of area code, suggesting it can be excluded.
3. Higher churn among customers with the International Plan.
4. Elevated churn for customers with four or more service calls.
5. High day and evening minute usage linked to increased churn.

Noteworthy is the absence of a clear relationship between churn and variables like day calls, evening calls, night calls, international calls, night minutes, international minutes, account length, or voicemail messages.
"""